# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-05-04 12:32
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import merchant.models.merchant


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# merchant.migrations.0064_auto_20180118_2220
# merchant.migrations.0065_auto_20180118_2221
# merchant.migrations.0066_events_to_sms_items

def default_template_failed_job():
    return "Hi {{customer.name}}.\nIt looks like your order from {{merchant}} has been cancelled. " \
           "You can contact {{merchant}} for more details at {{ phone_number }}"


def default_template_first_reminder():
    return "Hi, {{customer.name}}!\nPlease rate your order from {{merchant}}.\n" \
           "Follow the link below:\n{{ url }}"


def default_template_follow_up_reminder():
    return "Your feedback is so important. Just a friendly reminder to rate your order from {{merchant}}.\n" \
           "Follow the link below:\n{{ url }}"


class Migration(migrations.Migration):

    replaces = [('merchant', '0066_events_to_sms_items'), ('merchant', '0064_auto_20180118_2220'), ('merchant', '0065_auto_20180118_2221'), ('merchant', '0067_merge_20180308_0107'), ('merchant', '0064_auto_20180306_0331'), ('merchant', '0065_auto_20180307_2105'), ('merchant', '0068_merge_20180320_0046'), ('merchant', '0064_auto_20180206_2058'), ('merchant', '0065_auto_20180320_2209'), ('merchant', '0069_merge_20180321_2043'), ('merchant', '0064_merchant_use_success_codes'), ('merchant', '0069_merge_20180321_0048'), ('merchant', '0064_merchant_enable_delivery_pre_confirmation'), ('merchant', '0065_auto_20180313_2141'), ('merchant', '0070_merge_20180322_1919'), ('merchant', '0071_merchant_send_first_reminder'), ('merchant', '0059_auto_20171117_2107'), ('merchant', '0064_merge_20180222_2009'), ('merchant', '0065_auto_20180306_2036'), ('merchant', '0072_merge_20180323_2210'), ('merchant', '0072_auto_20180328_0209'), ('merchant', '0073_merge_20180414_1759'), ('merchant', '0073_merchant_webhook_failed_times'), ('merchant', '0074_merge_20180414_2222'), ('merchant', '0074_merchant_api_server_url'), ('merchant', '0075_merge_20180424_1821')]

    dependencies = [
        ('merchant', '0065_auto_20180208_2212'),
        ('notification', '0021_auto_20180215_0457'),
        ('reporting', '0015_merge_20170818_2159'),
    ]

    operations = [
        # migrations.CreateModel(
        #     name='MerchantSMSMessage',
        #     fields=[
        #         ('smsmessage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.SMSMessage')),
        #         ('merchant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sms_messages', to='merchant.Merchant')),
        #     ],
        #     options={
        #         'manager_inheritance_from_future': True,
        #     },
        #     bases=('notification.smsmessage',),
        # ),
        migrations.RemoveField(
            model_name='message',
            name='merchant',
        ),
        migrations.DeleteModel(
            name='Message',
        ),
        migrations.RemoveField(
            model_name='merchant',
            name='map_region',
        ),
        migrations.AddField(
            model_name='merchant',
            name='path_processing_new',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Driver movement without animation'), (1, 'Driver movement with animation'), (2, 'Driver movement animation with snapping to roads')], default=0, help_text="This setting specifies the strategy for processing new driver's coordinates and drawing car's movement on the map."),
        ),
        migrations.AddField(
            model_name='merchant',
            name='location_processing_price',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.RemoveField(
            model_name='merchant',
            name='path_processing',
        ),
        migrations.RenameField(
            model_name='merchant',
            old_name='path_processing_new',
            new_name='path_processing',
        ),
        migrations.AlterField(
            model_name='label',
            name='color',
            field=models.CharField(choices=[('red', 'Dark Red'), ('green', 'Dark Green'), ('blue', 'Turquoise'), ('yellow', 'Light Brown'), ('orange', 'Orange'), ('dark_blue', 'Dark Blue'), ('navy_blue', 'Navy Blue'), ('burgundy', 'Burgundy'), ('purple', 'Purple'), ('pink', 'Pink'), ('new_yellow', 'Yellow'), ('light_green', 'Light Green')], max_length=9),
        ),
        migrations.AlterField(
            model_name='label',
            name='color',
            field=models.CharField(choices=[('red', 'Dark Red'), ('green', 'Dark Green'), ('blue', 'Turquoise'), ('yellow', 'Light Brown'), ('orange', 'Orange'), ('dark_blue', 'Dark Blue'), ('navy_blue', 'Navy Blue'), ('burgundy', 'Burgundy'), ('purple', 'Purple'), ('pink', 'Pink'), ('new_yellow', 'Yellow'), ('light_green', 'Light Green')], max_length=255),
        ),
        migrations.AddField(
            model_name='merchant',
            name='follow_up_reminder',
            field=models.BooleanField(default=False, help_text='Enable this setting if you want to send a follow-up SMS as well as Email to a customer for feedback in 24 hours after job completion. SMS will only be sent in case a setting for SMS sending is enabled.', verbose_name='Send Follow Up SMS Reminder to Rate Job (24h)'),
        ),
        migrations.AddField(
            model_name='merchant',
            name='job_termination_sms_template',
            field=models.TextField(default=default_template_failed_job),
        ),
        migrations.AddField(
            model_name='merchant',
            name='use_success_codes',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='merchant',
            name='enable_delivery_pre_confirmation',
            field=models.BooleanField(default=False, help_text='This setting enables delivery pre-inspection: pre-inspection photos, pre-inspection signature,pre-inspection comment ', verbose_name='Enable delivery pre-inspection'),
        ),
        migrations.AddField(
            model_name='merchant',
            name='send_first_reminder',
            field=models.BooleanField(default=False, help_text='Enable this setting if you want to send a SMS as well as Email to a customer for feedback in 1 hour after job completion. SMS will only be sent in case a setting for SMS sending is enabled.', verbose_name='Send First SMS Reminder to Rate Job (1h)'),
        ),
        migrations.AddField(
            model_name='merchant',
            name='route_optimization',
            field=models.CharField(choices=[('disabled', 'Disabled'), ('ptv', 'PTV'), ('or-tools', "Google's OR Tools"), ('ptv_smartour_export', 'PTV Smartour export')], default='disabled', max_length=50),
        ),
        migrations.AddField(
            model_name='merchant',
            name='first_reminder_sms_template',
            field=models.TextField(default=default_template_first_reminder, verbose_name='First Reminder to Rate Job (1h) SMS template'),
        ),
        migrations.AddField(
            model_name='merchant',
            name='follow_up_reminder_sms_template',
            field=models.TextField(default=default_template_follow_up_reminder, verbose_name='Follow Up Reminder to Rate Job (24h) SMS template'),
        ),
        migrations.AddField(
            model_name='merchant',
            name='webhook_failed_times',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='merchant',
            name='api_server_url',
            field=models.URLField(default=merchant.models.merchant.get_api_server_url),
        ),
    ]
